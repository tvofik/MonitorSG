AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Template for a Lambda Function, The Lambda role, an Instance Role/Profile, an
  event & an SSM Automation Document that can trigger the lambda & a SSM
  Automation Role
Parameters:
  VPC1CIDR:
    Type: String
    Default: ""
    Description: Enter the CIDR of the 1st VPC.
    AllowedPattern: >-
      (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
  VPC2CIDR:
    Type: String
    Default: ""
    Description: Enter the CIDR of the 2nd VPC.
    AllowedPattern: >-
      (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
  OnPremCIDR:
    Type: String
    Default: ""
    Description: Enter the CIDR of the On-premises.
    AllowedPattern: >-
      (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
  FromPort:
    Type: Number
    Default: 10050
    Description: Enter the port number.
    MinValue: 0
    MaxValue: 65535
  ToPort:
    Type: Number
    Default: 10051
    Description: Enter the the port number of the On-premises.
    MinValue: 0
    MaxValue: 65535
  ConfigRuleName:
    Type: String
    Default: ZabbixSecurityGroupRule
    Description: Enter name og the config rule
  RoleName:
    Type: String
    Default: ""
    Description: Enter name of automation role.
Resources:
  SecurityGroupAutomationDocument:
    Type: "AWS::SSM::Document"
    Properties:
      Content:
        description: >-
          Adds port 10050 - 10051 & the specified cidr as a rule to security
          groups.
        schemaVersion: "0.3"
        assumeRole: "{{ AutomationAssumeRole }}"
        parameters:
          GroupId:
            type: String
            description: (Required) Security Group ID
            allowedPattern: '^([s][g]\-)([0-9a-f]){1,}$'
          VPC1CIDR:
            type: String
            description: >-
              (Required) IP Address of the source of the connection
              (ex:1.2.3.4/32)
            allowedPattern: >-
              (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
            default: ""
          VPC2CIDR:
            type: String
            description: >-
              (Required) IP Address of the source of the connection
              (ex:1.2.3.4/32)
            allowedPattern: >-
              (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
            default: ""
          OnPremCIDR:
            type: String
            description: >-
              (Required) IP Address of the source of the connection
              (ex:1.2.3.4/32)
            allowedPattern: >-
              (^$)|^((25[0-5]|(2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3})|(^((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?)::((?:[0-9A-Fa-f]{1,4}(?::[0-9A-Fa-f]{1,4})*)?))|(^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))\/(25[0-5]|2[0-4]\d|[0-1]?\d?\d)$
            default: ""
          AutomationAssumeRole:
            type: String
            description: >-
              (Optional) The ARN of the role that allows Automation to perform
              the actions on your behalf.
            default: ""
        mainSteps:
          - name: AddPortAndIP
            action: "aws:executeAwsApi"
            inputs:
              Service: ec2
              Api: AuthorizeSecurityGroupIngress
              GroupId: "{{GroupId}}"
              IpPermissions:
                - IpProtocol: tcp
                  FromPort: 10050
                  ToPort: 10051
                  IpRanges:
                    - CidrIp: "{{ VPC1CIDR }}"
                      Description: Zabbix rule for VPC1
                    - CidrIp: "{{ VPC2CIDR }}"
                      Description: Zabbix rule for VPC2
                    - CidrIp: "{{ OnPremCIDR }}"
                      Description: Zabbix rule for OnPrem
      DocumentType: Automation
      Name: add_zabbix_to_sg_remediation

  ConfigRuleForSecurityGroup:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: !Ref ConfigRuleName
      Scope:
        ComplianceResourceTypes:
          - "AWS::EC2::SecurityGroup"
      Source:
        Owner: "CUSTOM_POLICY"
        SourceDetails:
          - EventSource: "aws.config"
            MessageType: "ConfigurationItemChangeNotification"
          - EventSource: "aws.config"
            MessageType: "OversizedConfigurationItemChangeNotification"
        CustomPolicyDetails:
          PolicyRuntime: "guard-2.x.x"
          PolicyText: !Sub 'rule security_group when resourceType == "AWS::EC2::SecurityGroup" { some configuration.ipPermissions[*] { fromPort == ${FromPort} toPort == ${ToPort} some ipv4Ranges[*].cidrIp == "${VPC1CIDR}" }} rule security_group when resourceType == "AWS::EC2::SecurityGroup" { some configuration.ipPermissions[*] { fromPort == ${FromPort} toPort == ${ToPort} some ipv4Ranges[*].cidrIp == "${VPC2CIDR}" }} rule security_group when resourceType == "AWS::EC2::SecurityGroup" { some configuration.ipPermissions[*] { fromPort == ${FromPort} toPort == ${ToPort} some ipv4Ranges[*].cidrIp == "${OnPremCIDR}" }}'
          EnableDebugLogDelivery: true

  ConfigRuleForSecurityGroupRemediation:
    DependsOn: ConfigRuleForSecurityGroup
    Type: AWS::Config::RemediationConfiguration
    Properties:
      ConfigRuleName: !Ref ConfigRuleName
      ResourceType: "AWS::EC2::SecurityGroup"
      TargetId: !Ref SecurityGroupAutomationDocument
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Automatic: True
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 2
          ErrorPercentage: 5
      Parameters:
        GroupId:
          ResourceValue:
            Value: "RESOURCE_ID"
        VPC1CIDR:
          StaticValue:
            Values:
              - !Ref VPC1CIDR
        VPC2CIDR:
          StaticValue:
            Values:
              - !Ref VPC2CIDR
        OnPremCIDR:
          StaticValue:
            Values:
              - !Ref OnPremCIDR
        AutomationAssumeRole:
          StaticValue:
            Values:
              - !Sub "arn:aws:iam::${AWS::AccountID}:role/${RoleName}"
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60
